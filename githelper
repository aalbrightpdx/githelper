#!/usr/bin/env python3

import os
import subprocess
import sys

def run_cmd(cmd):
    result = subprocess.run(cmd, shell=True, text=True, capture_output=True)
    if result.stdout:
        print(result.stdout.strip())
    if result.stderr:
        print(result.stderr.strip())
    return result.returncode == 0

def in_git_repo():
    return subprocess.run("git rev-parse --is-inside-work-tree", shell=True,
                           stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL).returncode == 0

def main():
    if not in_git_repo():
        print("❌ Not inside a git repository. Please 'cd' into one first.")
        sys.exit(1)

    print("\n🔍 Checking git status...\n")
    if not run_cmd("git status"):
        print("Error running git status.")
        sys.exit(1)

    confirm = input("\n✅ Does everything look correct? (y/n): ").strip().lower()
    if confirm != 'y':
        print("❌ Aborted.")
        sys.exit(0)

    if not run_cmd("git add ."):
        print("❌ Error running git add.")
        sys.exit(1)

    commit_msg = input("\n📝 Enter your commit message: ").strip()
    if not commit_msg:
        print("❌ Commit message cannot be empty.")
        sys.exit(1)

    if not run_cmd(f"git commit -m \"{commit_msg}\""):
        print("❌ Error committing.")
        sys.exit(1)

    print("\n📜 Here’s the commit you just made:\n")
    run_cmd("git log -1 --stat")

    confirm_push = input("\n🚀 Ready to push to GitHub? (y/n): ").strip().lower()
    if confirm_push != 'y':
        print("❌ Push canceled.")
        sys.exit(0)

    if not run_cmd("git push"):
        print("❌ Error pushing to GitHub.")
        sys.exit(1)

    print("\n🎉✅ All done! Your changes are pushed!")

if __name__ == "__main__":
    main()

